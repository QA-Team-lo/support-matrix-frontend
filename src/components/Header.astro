---
import { siteConfig } from "@/config/site";
import { ModeToggle } from "./ModeToggle";
import { LangToggle } from "./LangToggle";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const currentPath = Astro.url.pathname;
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<header class="border-b py-4">
  <div class="container mx-auto px-8 justify-between md:flex">
    <div class="flex gap-4">
      <nav class="items-center md:flex">
        <a href={`/${lang}/`} class="text-xl font-bold mr-8"
          >{siteConfig.name}</a
        >
        <a href={`/${lang}/sheet/`} class="mr-8 text-xl">{t("nav.table")}</a>
        <a href={`/${lang}/update/`} class="mr-8 text-xl">{t("nav.update")}</a>
      </nav>
    </div>
    <div>
      <LangToggle client:load currentPath={currentPath} />
      <ModeToggle client:load />
    </div>
  </div>
</header>
