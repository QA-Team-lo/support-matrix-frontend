---
import { getSysData } from "@/lib/data";

export interface Props {
  boardDir: string;
  className?: string;
  showToc?: boolean;
  osFilter?: string;
  osList?: Array<{ linkName: string; systemDir: string; fileName?: string }>;
}

const {
  boardDir,
  className = "",
  showToc = true,
  osFilter = null,
  osList = [],
} = Astro.props;

// Variables to store content and state
let content = "";
let osContent = "";
let osDetails = [];
let testResults = [];
let isLoading = true;
let error = null;

try {
  // If osFilter is provided, get specific OS content
  if (osFilter) {
    const sysData = await getSysData(boardDir, osFilter);
    if (sysData) {
      osDetails.push({
        systemDir: sysData.dir,
        linkName: sysData.sys,
      });
    }
  } else {
    for (const os of osList) {
      const sysData = await getSysData(boardDir, os.systemDir);
      if (sysData) {
        osDetails.push({
          systemDir: sysData.dir,
          linkName: os.linkName,
        });
      }
    }
  }
} catch (e: unknown) {
  error = `Error loading data: ${e instanceof Error ? e.message : String(e)}`;
  console.error(error);
} finally {
  isLoading = false;
}

// Determine which content to display
const displayContent = osFilter ? osContent : content;
---

{
  isLoading && (
    <div class="p-4 text-center">
      <div
        class="inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]"
        role="status"
      >
        <span class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]">
          Loading...
        </span>
      </div>
      <p class="mt-2 text-gray-600">Loading content...</p>
    </div>
  )
}

{
  !isLoading && error && (
    <div class="p-4 border border-red-300 bg-red-50 text-red-700 rounded-md">
      {error}
    </div>
  )
}

{
  !isLoading && (
    <div
      class={`${className} ${showToc ? "lg:grid lg:grid-cols-4 gap-8" : ""}`}
    >
      <div class={showToc ? "lg:col-span-3" : ""}>
        {/* Display OS list with enhanced details if not filtered */}
        {!osFilter && osDetails.length > 0 && (
          <div class="mb-8">
            <div class="p-4 bg-gray-50 rounded-lg mb-4">
              <h3 class="text-lg font-semibold mb-2">Operating Systems</h3>
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                {osDetails.map((os) => (
                  <div class="border border-gray-200 rounded-md p-3 bg-white">
                    <h4 class="font-medium text-lg mb-2">
                      <a
                        href={`/board/${boardDir}/${os.linkName}`}
                        class="text-blue-600 hover:underline"
                      >
                        {os.linkName}
                      </a>
                    </h4>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}
