---
import { TableOfContents } from './TableOfContents';

export interface Props {
  url: string;
  className?: string;
  showToc?: boolean;
  repoPath?: string; // For fixing relative image paths
}

const { 
  url, 
  className = "", 
  showToc = true, 
  repoPath = "ruyisdk/support-matrix" 
} = Astro.props;

// Fetch the markdown content
let content = "";
let isLoading = true;
let error = null;

try {
  const response = await fetch(url);
  
  if (response.ok) {
    content = await response.text();
    
    // Remove the frontmatter section if it exists
    content = content.replace(/^---[\s\S]*?---\s*/m, '');
    
    // Fix relative image paths
    // This regex looks for markdown image syntax ![alt](path) and replaces relative paths
    content = content.replace(
      /!\[(.*?)\]\((?!http|\/)(.*?)\)/g, 
      `![$1](https://raw.githubusercontent.com/${repoPath}/main/$2)`
    );
  } else {
    error = `Failed to fetch markdown from ${url}: ${response.statusText}`;
    console.error(error);
  }
} catch (e) {
  error = `Error fetching markdown: ${e.message}`;
  console.error(error);
} finally {
  isLoading = false;
}

// Process the content with Astro's markdown parser
const renderedContent = content ? await Astro.markdown(content) : "";
---

{isLoading && (
  <div class="p-4 text-center">
    <div class="inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]" role="status">
      <span class="!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]">Loading...</span>
    </div>
    <p class="mt-2 text-gray-600">Loading content...</p>
  </div>
)}

{!isLoading && error && (
  <div class="p-4 border border-red-300 bg-red-50 text-red-700 rounded-md">
    {error}
  </div>
)}

{!isLoading && content && (
  <div class={`${className} ${showToc ? "lg:grid lg:grid-cols-4 gap-8" : ""}`}>
    <div class={showToc ? "lg:col-span-3" : ""}>
      <article class="prose prose-slate max-w-none">
        <Fragment set:html={renderedContent} />
      </article>
    </div>
    
    {showToc && (
      <div class="lg:col-span-1">
        <div class="sticky top-8">
          <TableOfContents client:load className="bg-gray-50 p-4 rounded-lg" />
        </div>
      </div>
    )}
  </div>
)}
